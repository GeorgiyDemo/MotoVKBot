from random import randint

import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id

import formater1
import formater2
import parser1
import parser2


def write_msg(user_id, message):
    vk.method('messages.send', {'user_id': user_id, 'random_id': get_random_id(), 'message': message})


# API-–∫–ª—é—á —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ
token = "–¢–æ–∫–µ–Ω —Å–Ω–æ–≤–∞ —Å–ª–∏–ª—Å—è"

# –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
vk = vk_api.VkApi(token=token)

universal_dict = {}
# –†–∞–±–æ—Ç–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
longpoll = VkLongPoll(vk)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
for event in longpoll.listen():

    # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if event.type == VkEventType.MESSAGE_NEW:

        # –ï—Å–ª–∏ –æ–Ω–æ –∏–º–µ–µ—Ç –º–µ—Ç–∫—É –¥–ª—è –º–µ–Ω—è( —Ç–æ –µ—Å—Ç—å –±–æ—Ç–∞)
        if event.to_me:

            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            request = event.text

            if request == "/start":

                universal_dict[event.user_id] = {}
                keyboard = VkKeyboard(one_time=True)
                keyboard.add_button('bolshoi ru', color=VkKeyboardColor.DEFAULT)
                keyboard.add_button('et-cetera ru', color=VkKeyboardColor.DEFAULT)
                message_str = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –ø–æ–¥—Å–∫–∞–∂—É –í–∞–º –≥—Ä–∞—Ñ–∏–∫ —Å–ø–µ–∫—Ç–∞–∫–ª–µ–π\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:"
                vk.method('messages.send',
                          {'user_id': event.user_id, 'random_id': get_random_id(), "keyboard": keyboard.get_keyboard(),
                           'message': message_str})

            elif request == "bolshoi ru" and event.user_id in universal_dict:
                universal_dict[event.user_id]["source"] = 1
                write_msg(event.user_id,
                          "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/2020 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ—Å—è—Ü –∏–ª–∏ –¥–µ–Ω—å –º–µ—Å—è—Ü –∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/01/2020 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å")

            elif request == "et-cetera ru" and event.user_id in universal_dict:
                universal_dict[event.user_id]["source"] = 2
                write_msg(event.user_id,
                          "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/2020 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ—Å—è—Ü –∏–ª–∏ –¥–µ–Ω—å –º–µ—Å—è—Ü –∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/01/2020 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å")
            else:
                if event.user_id in universal_dict:

                    # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π
                    if (len(request) == 7 and "/" in request) or (len(request) == 10 and "/" in request):

                        write_msg(event.user_id, "–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ..")
                        # –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Ññ1
                        if universal_dict[event.user_id]["source"] == 1:
                            result = parser1.parser(request)
                            send_list = formater1.format(result)
                            for s in send_list:
                                write_msg(event.user_id, s)

                        # –ò–Ω–∞—á–µ –µ—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Ññ2
                        elif universal_dict[event.user_id]["source"] == 2:
                            result = parser2.parser(request)
                            send_list = formater2.format(result)
                            for s in send_list:
                                write_msg(event.user_id, s)
                    else:
                        write_msg(event.user_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞—Ç—ã!")

                    universal_dict.pop(event.user_id, None)

                else:
                    write_msg(event.user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã üòâ")
